{"version":3,"file":"static/js/475.0980a871.chunk.js","mappings":"qNAEaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4DAMhBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kO,SCgB7B,EApBmB,SAAHG,GAAmB,IAAbC,EAAKD,EAALC,MACdC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAACV,EAAI,CAAAW,SACFJ,EAAMK,KAAI,SAAAC,GACT,OACEH,EAAAA,EAAAA,KAACN,EAAI,CAAAO,UACHD,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,EAAQI,IAAMC,MAAO,CAAEC,KAAMX,GAAWG,SAC1DE,EAAQO,SAFFP,EAAQI,GAMvB,KAGN,C,+JC0BA,EAvCa,WACX,IAAAI,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BpB,EAAKqB,EAAA,GAAEC,EAAQD,EAAA,GAEdE,GAAkBC,EAAAA,EAAAA,KAAlBD,cA0BR,OAxBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAEE,SAAAC,IAWxB,OAXwBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAzB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACoB,OAAlBhB,GAAY,GAAMc,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEYZ,EAAca,cAAc,CAAEV,WAAAA,IAAc,KAAD,EAAjEM,EAAaC,EAAAI,KACnBf,EAASU,EAAcM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEhCX,EAAS,IACTkB,QAAQC,IAAI,eAAe,QAER,OAFQR,EAAAC,KAAA,GAE3Bf,GAAY,GAAOc,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAZ,EAAA,yBAEtBa,MAAA,KAAAC,UAAA,CAID,OAjByC,WAEhBjB,EAAAgB,MAAC,KAADC,UAAA,CAazBC,GAEO,WACLpB,EAAWqB,OACb,CACF,GAAG,CAACxB,KAIFyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7C,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACHc,IAAYf,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,IACnBlD,EAAMmD,OAAS,IAAKhD,EAAAA,EAAAA,KAACiD,EAAAA,EAAU,CAACpD,MAAOA,MAG9C,C","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.js","pages/Home/Home.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n  a {\n    text-decoration: none;\n    color: #333;\n    font-size: 16px;\n    font-weight: bold;\n    transition: color 0.2s ease-in-out;\n\n    &:hover {\n      color: #4CAF50;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List, Item } from './MovieList.styled';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {films.map(element => {\n        return (\n          <Item key={element.id}>\n            <Link to={`/movies/${element.id}`} state={{ from: location }}>\n              {element.title}\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { useContextFetchFilm } from 'components/ContextFetchFilm/ContextFetchFilm';\n\nimport Loader from 'components/Loader';\nimport MoviesList from 'components/MoviesList';\n\nconst Home = () => {\n  const [showLoad, setShowLoad] = useState(false);\n  const [films, setFilms] = useState([]);\n  // * Беру контекст для роботи із APIзапросами\n  const { apiThemoviedb } = useContextFetchFilm();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function fetchFilms() {\n      setShowLoad(true);\n      try {\n        const trandingFilms = await apiThemoviedb.fetchTrending({ controller });\n        setFilms(trandingFilms.results);\n      } catch {\n        setFilms([]);\n        console.log('Error fetch');\n      } finally {\n        setShowLoad(false);\n      }\n    }\n\n    fetchFilms();\n\n    return () => {\n      controller.abort();\n    };\n  }, [apiThemoviedb]);\n  // ! З попререднім рядком нема проблем? Не треба мемозувати apiThemoviedb??\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {showLoad && <Loader />}\n      {films.length > 0 && <MoviesList films={films} />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","_ref","films","location","useLocation","_jsx","children","map","element","Link","to","concat","id","state","from","title","_useState","useState","_useState2","_slicedToArray","showLoad","setShowLoad","_useState3","_useState4","setFilms","apiThemoviedb","useContextFetchFilm","useEffect","controller","AbortController","_fetchFilms","_asyncToGenerator","_regeneratorRuntime","_callee","trandingFilms","_context","prev","next","fetchTrending","sent","results","t0","console","log","finish","stop","apply","arguments","fetchFilms","abort","_jsxs","_Fragment","Loader","length","MoviesList"],"sourceRoot":""}