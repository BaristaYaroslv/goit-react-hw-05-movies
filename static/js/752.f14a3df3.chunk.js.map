{"version":3,"file":"static/js/752.f14a3df3.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","components/AdditionalInformationFilm/AdditionalInformationFilm.styled.js","components/AdditionalInformationFilm/AdditionalInformationFilm.js","components/MovieInformation/MovieInformation.styled.js","components/MovieInformation/MovieInformation.js","pages/MovieDetails/MovieDetails.js","servises/fetchFilms.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n\n  :hover {\n    color: #4CAF50;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  border-top: 1px solid gray;\n  border-bottom: 1px solid gray;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Wrap } from './AdditionalInformationFilm.styled';\n\nconst AdditionalInformationFilm = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  return (\n    <Wrap>\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </Wrap>\n  );\n};\n\nexport default AdditionalInformationFilm;\n","import styled from 'styled-components';\n\n/* Стили для контейнера с фильмом */\nexport const Wrap = styled.div`\n  display: flex;\n  margin: 20px;\n`;\n/* Стили для обертки изображения */\nexport const WrapImage = styled.div`\n  flex: 0 0 300px;\n  margin-right: 20px;\n`;\n/* Стили для изображения */\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n`;\n/* Стили для заголовка фильма */\nexport const H1 = styled.h1`\n  font-size: 32px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n/* Стили для оценки пользователей */\nexport const P = styled.p`\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n/* Стили для описания фильма */\nexport const H2 = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;","import PropTypes from 'prop-types';\nimport { Wrap, WrapImage, Image, H1, H2, P,} from './MovieInformation.styled';\n\nconst MovieInformation = ({ filmInformatioin }) => {\n  const {\n    posterPath,\n    original_title,\n    releaseDate,\n    voteAverage,\n    overview,\n    genresText,\n  } = filmInformatioin;\n\n  return (\n    <Wrap>\n      <WrapImage>\n        <Image src={posterPath} alt={original_title} />\n      </WrapImage>\n\n      <div>\n        <H1>{`${original_title} (${releaseDate})`}</H1>\n        <P>{`User Score: ${voteAverage}%`}</P>\n        <H2>Overviews</H2>\n        <P>{overview}</P>\n        <H2>Genders</H2>\n        <P>{genresText}</P>\n      </div>\n    </Wrap>\n  );\n};\n\nMovieInformation.propTypes = {\n  filmInformatioin: PropTypes.exact({\n    posterPath: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    releaseDate: PropTypes.string.isRequired,\n    voteAverage: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genresText: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default MovieInformation;\n","import { useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport BackLink from 'components/BackLink';\nimport AdditionalInformationFilm from 'components/AdditionalInformationFilm';\nimport MovieInformation from 'components/MovieInformation';\nimport Loader from 'components/Loader';\nimport ApiThemoviedb from '../../servises/fetchFilms'\n// import { useContextFetchFilm } from 'components/ContextFetchFilm/ContextFetchFilm';\n\nconst apiThemoviedb = new ApiThemoviedb();\n\nconst MovieDetails = () => {\n  // * Беру контекст для роботи із APIзапросами\n  // const { apiThemoviedb } = useContextFetchFilm();\n  const [filmInformatioin, setFilmInformatioin] = useState(null);\n  const [showLoad, setShowLoad] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchInformation() {\n      setShowLoad(true);\n      try {\n        const {\n          poster_path,\n          overview,\n          original_title,\n          release_date,\n          vote_average,\n          genres,\n        } = await apiThemoviedb.fetchFullInformationFromFilm(\n          movieId,\n          controller\n        );\n\n        const posterPath = await apiThemoviedb.getUrlImage('w342');\n\n        setFilmInformatioin({\n          posterPath: `${posterPath}${poster_path}`,\n          original_title,\n          releaseDate: release_date.slice(0, 4),\n          voteAverage: Math.ceil(Number(vote_average) * 10),\n          overview,\n          genresText: apiThemoviedb.getGendeText(genres),\n        });\n      } catch {\n        setFilmInformatioin(null);\n        console.log('Error fetch');\n      } finally {\n        setShowLoad(false);\n      }\n    }\n\n    fetchInformation();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {showLoad && <Loader />}\n\n      {!showLoad && (\n        <>\n          <BackLink to={backLinkHref}> Go back</BackLink>\n          {filmInformatioin !== null && (\n            <MovieInformation filmInformatioin={filmInformatioin} />\n          )}\n          <AdditionalInformationFilm state={{ from: backLinkHref }} />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport default class ApiThemoviedb {\n  #KEY = '79054ab6d7c73d62d26a93a0f299cea4';\n  #URL = 'https://api.themoviedb.org/3/';\n\n  constructor() {\n    this.API = axios.create({\n      baseURL: this.#URL,\n      header: {},\n      params: {\n        api_key: this.#KEY,\n      },\n    });\n\n    this.configImages = null;\n    this.listGenge = null;\n  }\n\n  // * OK\n  async searchFilm({ nameFilms, controller, page = 1 } = {}) {\n    const result = await this.API.get(`search/movie`, {\n      params: {\n        signal: controller.signal,\n        query: nameFilms,\n        page,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchTrending({ controller, page = 1, time_window = 'day' } = {}) {\n    const result = await this.API.get(`/trending/movie/${time_window}`, {\n      params: {\n        signal: controller.signal,\n        page,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchFullInformationFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchCreditsFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}/credits`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n    return result?.data;\n  }\n\n  // * OK\n  async fetchReviewsFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}/reviews`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n    return result?.data;\n  }\n\n  async getUrlImage(size) {\n    // ! Документація саме так радить знаходити урл до зображенння\n    // Тому не підставляю просто рядок\n\n    const configurationImages = await this.getConfigurationImages();\n\n    return `${configurationImages.base_url}${size}`;\n\n    // console.log(configurationImages.poster_sizes);\n    // return `${configurationImages.base_url}${configurationImages.poster_sizes[0]}${path}`;\n    // return `${configurationImages.base_url}original${path}`;\n  }\n\n  // * Work from configuration Images\n  async getConfigurationImages() {\n    if (this.configImages) return this.configImages;\n\n    this.configImages = await this.fetchConfiguration();\n\n    return this.configImages;\n  }\n\n  async fetchConfiguration() {\n    const result = await this.API.get('/configuration');\n    return result?.data?.images;\n  }\n\n  getGendeText(genres) {\n    const gendeText = genres.reduce((gendeText, element) => {\n      return (gendeText += (gendeText === '' ? '' : ', ') + element.name);\n    }, '');\n\n    return gendeText;\n  }\n}\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","to","children","_jsxs","_jsx","HiArrowLeft","size","Wrap","_location$state$from","_location$state","backLinkHref","useLocation","state","from","WrapImage","_templateObject2","Image","_templateObject3","H1","_templateObject4","P","_templateObject5","H2","_templateObject6","filmInformatioin","posterPath","original_title","releaseDate","voteAverage","overview","genresText","src","alt","concat","apiThemoviedb","ApiThemoviedb","_useState","useState","_useState2","_slicedToArray","setFilmInformatioin","_useState3","_useState4","showLoad","setShowLoad","movieId","useParams","useEffect","controller","AbortController","_fetchInformation","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$apiThemoviedb$","poster_path","release_date","vote_average","genres","_context","prev","next","fetchFullInformationFromFilm","sent","getUrlImage","slice","Math","ceil","Number","getGendeText","t0","console","log","finish","stop","apply","arguments","fetchInformation","abort","_Fragment","Loader","BackLink","MovieInformation","AdditionalInformationFilm","Suspense","fallback","Outlet","_KEY","_classPrivateFieldLooseKey","_URL","_classCallCheck","Object","defineProperty","writable","value","this","API","axios","baseURL","_classPrivateFieldLooseBase","header","params","api_key","configImages","listGenge","_createClass","key","_searchFilm","nameFilms","_ref$page","page","result","_args","length","undefined","get","signal","query","abrupt","data","_fetchTrending","_callee2","_ref2","_ref2$page","_ref2$time_window","time_window","_args2","_context2","_fetchFullInformationFromFilm","_callee3","movie_id","_context3","_x","_x2","_fetchCreditsFromFilm","_callee4","_context4","_x3","_x4","_fetchReviewsFromFilm","_callee5","_context5","_x5","_x6","_getUrlImage","_callee6","configurationImages","_context6","getConfigurationImages","base_url","_x7","_getConfigurationImages","_callee7","_context7","fetchConfiguration","_fetchConfiguration","_callee8","_result$data","_context8","images","reduce","gendeText","element","name"],"sourceRoot":""}