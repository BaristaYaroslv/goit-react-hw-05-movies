{"version":3,"file":"static/js/357.e9ea5a80.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","servises/fetchFilms.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const CastListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const CastImage = styled.img`\n  width: 185px;\n  height: auto;\n  border-radius: 5%;\n  object-fit: cover;\n`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n// import { useContextFetchFilm } from 'components/ContextFetchFilm/ContextFetchFilm';\nimport Loader from 'components/Loader';\nimport noPhoto from '../../images/images.png';\nimport { CastImage, CastList, CastListItem } from 'components/Cast/Cast.styled'\nimport ApiThemoviedb from '../../servises/fetchFilms'\n\nconst apiThemoviedb = new ApiThemoviedb();\n\nconst Cast = () => {\n  // * Беру контекст для роботи із APIзапросами\n  // const { apiThemoviedb } = useContextFetchFilm();\n  const [showLoad, setShowLoad] = useState(false);\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [posterPath, setPosterPath] = useState('');\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchInformation() {\n      setShowLoad(true);\n      try {\n        const information = await apiThemoviedb.fetchCreditsFromFilm(\n          movieId,\n          controller\n        );\n\n        setCast(information.cast);\n\n        const posterPath = await apiThemoviedb.getUrlImage('w185');\n        setPosterPath(posterPath);\n      } catch {\n        setCast([]);\n        console.log('Error fetch');\n      } finally {\n        setShowLoad(false);\n      }\n    }\n\n    fetchInformation();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {showLoad && <Loader />}\n      {!showLoad && cast.length === 0 && (\n        <p>We don't have information about cast.</p>\n      )}\n      {!showLoad && cast.length !== 0 && (\n        <CastList>\n          {cast.map(element => {\n            const src =\n              element.profile_path !== null\n                ? `${posterPath}${element.profile_path}`\n                : noPhoto;\n\n            return (\n              <CastListItem key={element.cast_id}>\n                <CastImage src={src} alt={element.name} width=\"185\" />\n                <p>{element.name}</p>\n                <p>{element.character}</p>\n              </CastListItem>\n            );\n          })}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nexport default class ApiThemoviedb {\n  #KEY = '79054ab6d7c73d62d26a93a0f299cea4';\n  #URL = 'https://api.themoviedb.org/3/';\n\n  constructor() {\n    this.API = axios.create({\n      baseURL: this.#URL,\n      header: {},\n      params: {\n        api_key: this.#KEY,\n      },\n    });\n\n    this.configImages = null;\n    this.listGenge = null;\n  }\n\n  // * OK\n  async searchFilm({ nameFilms, controller, page = 1 } = {}) {\n    const result = await this.API.get(`search/movie`, {\n      params: {\n        signal: controller.signal,\n        query: nameFilms,\n        page,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchTrending({ controller, page = 1, time_window = 'day' } = {}) {\n    const result = await this.API.get(`/trending/movie/${time_window}`, {\n      params: {\n        signal: controller.signal,\n        page,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchFullInformationFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchCreditsFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}/credits`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n    return result?.data;\n  }\n\n  // * OK\n  async fetchReviewsFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}/reviews`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n    return result?.data;\n  }\n\n  async getUrlImage(size) {\n    // ! Документація саме так радить знаходити урл до зображенння\n    // Тому не підставляю просто рядок\n\n    const configurationImages = await this.getConfigurationImages();\n\n    return `${configurationImages.base_url}${size}`;\n\n    // console.log(configurationImages.poster_sizes);\n    // return `${configurationImages.base_url}${configurationImages.poster_sizes[0]}${path}`;\n    // return `${configurationImages.base_url}original${path}`;\n  }\n\n  // * Work from configuration Images\n  async getConfigurationImages() {\n    if (this.configImages) return this.configImages;\n\n    this.configImages = await this.fetchConfiguration();\n\n    return this.configImages;\n  }\n\n  async fetchConfiguration() {\n    const result = await this.API.get('/configuration');\n    return result?.data?.images;\n  }\n\n  getGendeText(genres) {\n    const gendeText = genres.reduce((gendeText, element) => {\n      return (gendeText += (gendeText === '' ? '' : ', ') + element.name);\n    }, '');\n\n    return gendeText;\n  }\n}\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastListItem","_templateObject2","CastImage","_templateObject3","apiThemoviedb","ApiThemoviedb","_useState","useState","_useState2","_slicedToArray","showLoad","setShowLoad","movieId","useParams","_useState3","_useState4","cast","setCast","_useState5","_useState6","posterPath","setPosterPath","useEffect","controller","AbortController","_fetchInformation","_asyncToGenerator","_regeneratorRuntime","_callee","information","_posterPath","_context","prev","next","fetchCreditsFromFilm","sent","getUrlImage","t0","console","log","finish","stop","apply","arguments","fetchInformation","abort","_jsxs","_Fragment","children","_jsx","Loader","length","map","element","src","profile_path","concat","alt","name","width","character","cast_id","_KEY","_classPrivateFieldLooseKey","_URL","_classCallCheck","Object","defineProperty","writable","value","this","API","axios","baseURL","_classPrivateFieldLooseBase","header","params","api_key","configImages","listGenge","_createClass","key","_searchFilm","_ref","nameFilms","_ref$page","page","result","_args","undefined","get","signal","query","abrupt","data","_fetchTrending","_callee2","_ref2","_ref2$page","_ref2$time_window","time_window","_args2","_context2","_fetchFullInformationFromFilm","_callee3","movie_id","_context3","_x","_x2","_fetchCreditsFromFilm","_callee4","_context4","_x3","_x4","_fetchReviewsFromFilm","_callee5","_context5","_x5","_x6","_getUrlImage","_callee6","size","configurationImages","_context6","getConfigurationImages","base_url","_x7","_getConfigurationImages","_callee7","_context7","fetchConfiguration","_fetchConfiguration","_callee8","_result$data","_context8","images","genres","reduce","gendeText"],"sourceRoot":""}