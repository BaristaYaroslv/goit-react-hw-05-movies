{"version":3,"file":"static/js/22.066a248f.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","components/NoFilm/NoFilm.js","pages/Movies/Movies.js","servises/fetchFilms.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 20px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Item = styled.li`\n  background-color: #fff;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  padding: 20px;\n  border-radius: 4px;\n\n  &:hover {\n    transform: translateY(-5px);\n    transition: all 0.2s ease-in-out;\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);\n  }\n\n  a {\n    text-decoration: none;\n    color: #333;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n    margin-bottom: 20px;\n    border-radius: 4px;\n  }\n\n  h3 {\n    font-size: 20px;\n    margin: 0 0 10px;\n  }\n\n  p {\n    font-size: 14px;\n    margin: 0;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List, Item } from './MovieList.styled';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  console.log(films)\n  return (\n    <List>\n      {films.map(element => {\n        console.log(element)\n        return (\n          <Item key={element.id}>\n            <Link to={`/movies/${element.id}`} state={{ from: location }}>\n              <img src={element.poster_path ? (`https://www.themoviedb.org/t/p/original/${element.poster_path}`): (\"https://i.ibb.co/z703XMd/film-plug.png\")} alt={element.title}></img>\n          <div>\n              <h3>{element.title}</h3>\n              <p>{element.release_date}</p>\n          </div>\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const FormSearch = styled.form`\n  display: flex;\n  gap: 3px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Button = styled.button`\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { FormSearch, Input, Button } from './SearchBox.styled';\n\nconst SearchBox = ({ onSubmitForm }) => {\n  return (\n    <FormSearch onSubmit={onSubmitForm}>\n      <Input\n        name=\"searchFilm\"\n        type=\"text\"\n        autoComplete=\"on\"\n        autoFocus\n        placeholder=\"Search films\"\n      />\n      <Button type=\"submit\">Search</Button>\n    </FormSearch>\n  );\n};\nSearchBox.propTypes = {\n  onSubmitForm: PropTypes.func,\n};\n\nexport default SearchBox;\n","import PropTypes from 'prop-types';\n\nconst NoFilm = ({ nameFilms }) => {\n  return <p>No find film with name {nameFilms}</p>;\n};\n\nNoFilm.propTypes = {\n  nameFilms: PropTypes.string.isRequired,\n};\n\nexport default NoFilm;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n// import { useContextFetchFilm } from 'components/ContextFetchFilm/ContextFetchFilm';\nimport SearchBox from 'components/SearchBox';\nimport NoFilm from 'components/NoFilm';\nimport MoviesList from 'components/MoviesList';\nimport Loader from 'components/Loader';\nimport ApiThemoviedb from '../../servises/fetchFilms'\n\nconst apiThemoviedb = new ApiThemoviedb();\n\nconst Movies = () => {\n  // * Беру контекст для роботи із APIзапросами\n  // const { apiThemoviedb } = useContextFetchFilm();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [films, setFilms] = useState([]);\n  const [showLoad, setShowLoad] = useState(false);\n\n  const nameFilms = searchParams.get('nameFilms') ?? '';\n\n  const handlerSubmitForm = event => {\n    event.preventDefault();\n    const form = event.target;\n    const value = form.elements.searchFilm.value;\n\n    setSearchParams(value !== '' ? { nameFilms: value } : {});\n    setFilms([]);\n\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (nameFilms === '') {\n      return;\n    }\n\n    const controller = new AbortController();\n\n    async function fetchFilms(nameFilms) {\n      setShowLoad(true);\n      try {\n        const searchFilms = await apiThemoviedb.searchFilm({\n          controller,\n          nameFilms,\n        });\n        setFilms(searchFilms.results);\n      } catch (Error) {\n        setFilms([]);\n        console.log('Error fetch', Error);\n      } finally {\n        setShowLoad(false);\n      }\n    }\n\n    fetchFilms(nameFilms);\n\n    return () => {\n      controller.abort();\n    };\n  }, [nameFilms]);\n\n  return (\n    <>\n      <SearchBox onSubmitForm={handlerSubmitForm} />\n\n      {showLoad && <Loader />}\n      {films.length === 0 && nameFilms !== '' && !showLoad && (\n        <NoFilm nameFilms={nameFilms} />\n      )}\n      {films.length !== 0 && <MoviesList films={films} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport default class ApiThemoviedb {\n  #KEY = '79054ab6d7c73d62d26a93a0f299cea4';\n  #URL = 'https://api.themoviedb.org/3/';\n\n  constructor() {\n    this.API = axios.create({\n      baseURL: this.#URL,\n      header: {},\n      params: {\n        api_key: this.#KEY,\n      },\n    });\n\n    this.configImages = null;\n    this.listGenge = null;\n  }\n\n  // * OK\n  async searchFilm({ nameFilms, controller, page = 1 } = {}) {\n    const result = await this.API.get(`search/movie`, {\n      params: {\n        signal: controller.signal,\n        query: nameFilms,\n        page,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchTrending({ controller, page = 1, time_window = 'day' } = {}) {\n    const result = await this.API.get(`/trending/movie/${time_window}`, {\n      params: {\n        signal: controller.signal,\n        page,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchFullInformationFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchCreditsFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}/credits`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n    return result?.data;\n  }\n\n  // * OK\n  async fetchReviewsFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}/reviews`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n    return result?.data;\n  }\n\n  async getUrlImage(size) {\n    // ! Документація саме так радить знаходити урл до зображенння\n    // Тому не підставляю просто рядок\n\n    const configurationImages = await this.getConfigurationImages();\n\n    return `${configurationImages.base_url}${size}`;\n\n    // console.log(configurationImages.poster_sizes);\n    // return `${configurationImages.base_url}${configurationImages.poster_sizes[0]}${path}`;\n    // return `${configurationImages.base_url}original${path}`;\n  }\n\n  // * Work from configuration Images\n  async getConfigurationImages() {\n    if (this.configImages) return this.configImages;\n\n    this.configImages = await this.fetchConfiguration();\n\n    return this.configImages;\n  }\n\n  async fetchConfiguration() {\n    const result = await this.API.get('/configuration');\n    return result?.data?.images;\n  }\n\n  getGendeText(genres) {\n    const gendeText = genres.reduce((gendeText, element) => {\n      return (gendeText += (gendeText === '' ? '' : ', ') + element.name);\n    }, '');\n\n    return gendeText;\n  }\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","_ref","films","location","useLocation","console","log","_jsx","children","map","element","_jsxs","Link","to","concat","id","state","from","src","poster_path","alt","title","release_date","FormSearch","Input","_templateObject3","Button","_templateObject4","onSubmitForm","onSubmit","name","type","autoComplete","autoFocus","placeholder","nameFilms","apiThemoviedb","ApiThemoviedb","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","setFilms","_useState3","_useState4","showLoad","setShowLoad","get","useEffect","controller","AbortController","_x","_fetchFilms","apply","arguments","fetchFilms","abort","_asyncToGenerator","_regeneratorRuntime","_callee","searchFilms","_context","prev","next","searchFilm","sent","results","t0","finish","stop","_Fragment","SearchBox","event","preventDefault","form","target","value","elements","reset","Loader","length","NoFilm","MoviesList","_KEY","_classPrivateFieldLooseKey","_URL","_classCallCheck","Object","defineProperty","writable","this","API","axios","baseURL","_classPrivateFieldLooseBase","header","params","api_key","configImages","listGenge","_createClass","key","_searchFilm","_ref$page","page","result","_args","undefined","signal","query","abrupt","data","_fetchTrending","_callee2","_ref2","_ref2$page","_ref2$time_window","time_window","_args2","_context2","_fetchFullInformationFromFilm","_callee3","movie_id","_context3","_x2","_fetchCreditsFromFilm","_callee4","_context4","_x3","_x4","_fetchReviewsFromFilm","_callee5","_context5","_x5","_x6","_getUrlImage","_callee6","size","configurationImages","_context6","getConfigurationImages","base_url","_x7","_getConfigurationImages","_callee7","_context7","fetchConfiguration","_fetchConfiguration","_callee8","_result$data","_context8","images","genres","reduce","gendeText"],"sourceRoot":""}