{"version":3,"file":"static/js/663.4c6c297d.chunk.js","mappings":"+RAEaA,EAAWC,EAAAA,GAAAA,GAAH,8HASRC,EAAeD,EAAAA,GAAAA,GAAH,oHAOZE,EAAYF,EAAAA,GAAAA,IAAH,sG,SCsDtB,EAjEa,WAEX,IAAQG,GAAkBC,EAAAA,EAAAA,KAAlBD,cACR,GAAgCE,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBH,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAoCN,EAAAA,EAAAA,UAAS,IAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KA+BA,OA7BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAEd,6FACET,GAAY,GADd,kBAG8BJ,EAAcc,qBACtCT,EACAO,GALN,cAGUG,EAHV,OAQIP,EAAQO,EAAYR,MARxB,SAU6BP,EAAcgB,YAAY,QAVvD,OAUUP,EAVV,OAWIC,EAAcD,GAXlB,kDAaID,EAAQ,IACRS,QAAQC,IAAI,eAdhB,yBAgBId,GAAY,GAhBhB,8EAFc,sBAwBd,OAxBc,mCAsBde,GAEO,WACLP,EAAWQ,OACZ,CACF,GAAE,CAACpB,EAAeK,KAGjB,gCACGF,IAAY,SAACkB,EAAA,EAAD,KACXlB,GAA4B,IAAhBI,EAAKe,SACjB,kEAEAnB,GAA4B,IAAhBI,EAAKe,SACjB,SAAC1B,EAAD,UACGW,EAAKgB,KAAI,SAAAC,GACR,IAAMC,EACqB,OAAzBD,EAAQE,aAAR,UACOjB,GADP,OACoBe,EAAQE,cACxBC,EAEN,OACE,UAAC7B,EAAD,YACE,SAACC,EAAD,CAAW0B,IAAKA,EAAKG,IAAKJ,EAAQK,KAAMC,MAAM,SAC9C,uBAAIN,EAAQK,QACZ,uBAAIL,EAAQO,cAHKP,EAAQQ,QAM9B,QAKV,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const CastListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const CastImage = styled.img`\n  width: 185px;\n  height: auto;\n  border-radius: 5%;\n  object-fit: cover;\n`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useContextFetchFilm } from 'components/ContextFetchFilm/ContextFetchFilm';\nimport Loader from 'components/Loader';\nimport noPhoto from '../../images/images.png';\nimport {CastImage, CastList, CastListItem } from 'components/Cast/Cast.styled'\n\nconst Cast = () => {\n  // * Беру контекст для роботи із APIзапросами\n  const { apiThemoviedb } = useContextFetchFilm();\n  const [showLoad, setShowLoad] = useState(false);\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [posterPath, setPosterPath] = useState('');\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchInformation() {\n      setShowLoad(true);\n      try {\n        const information = await apiThemoviedb.fetchCreditsFromFilm(\n          movieId,\n          controller\n        );\n\n        setCast(information.cast);\n\n        const posterPath = await apiThemoviedb.getUrlImage('w185');\n        setPosterPath(posterPath);\n      } catch {\n        setCast([]);\n        console.log('Error fetch');\n      } finally {\n        setShowLoad(false);\n      }\n    }\n\n    fetchInformation();\n\n    return () => {\n      controller.abort();\n    };\n  }, [apiThemoviedb, movieId]);\n\n  return (\n    <>\n      {showLoad && <Loader />}\n      {!showLoad && cast.length === 0 && (\n        <p>We don't have information about cast.</p>\n      )}\n      {!showLoad && cast.length !== 0 && (\n        <CastList>\n          {cast.map(element => {\n            const src =\n              element.profile_path !== null\n                ? `${posterPath}${element.profile_path}`\n                : noPhoto;\n\n            return (\n              <CastListItem key={element.cast_id}>\n                <CastImage src={src} alt={element.name} width=\"185\" />\n                <p>{element.name}</p>\n                <p>{element.character}</p>\n              </CastListItem>\n            );\n          })}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","CastListItem","CastImage","apiThemoviedb","useContextFetchFilm","useState","showLoad","setShowLoad","movieId","useParams","cast","setCast","posterPath","setPosterPath","useEffect","controller","AbortController","fetchCreditsFromFilm","information","getUrlImage","console","log","fetchInformation","abort","Loader","length","map","element","src","profile_path","noPhoto","alt","name","width","character","cast_id"],"sourceRoot":""}