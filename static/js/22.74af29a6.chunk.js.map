{"version":3,"file":"static/js/22.74af29a6.chunk.js","mappings":"gNAEaA,EAAOC,EAAAA,GAAAA,GAAH,0EAMJC,EAAOD,EAAAA,GAAAA,GAAH,gP,SCgBjB,EApBmB,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,UACGG,EAAMG,KAAI,SAAAC,GACT,OACE,SAACL,EAAD,WACE,SAAC,KAAD,CAAMM,GAAE,kBAAaD,EAAQE,IAAMC,MAAO,CAAEC,KAAMP,GAAlD,SACGG,EAAQK,SAFFL,EAAQE,GAMtB,KAGN,C,8JCTYI,GARUZ,EAAAA,GAAAA,IAAH,sJAQMA,EAAAA,GAAAA,KAAH,wDAKVa,EAAQb,EAAAA,GAAAA,MAAH,+FAMLc,EAASd,EAAAA,GAAAA,OAAH,+C,SCAnB,EAlBkB,SAAC,GAAsB,IAApBe,EAAmB,EAAnBA,aACnB,OACE,UAACH,EAAD,CAAYI,SAAUD,EAAtB,WACE,SAACF,EAAD,CACEI,KAAK,aACLC,KAAK,OACLC,aAAa,KACbC,WAAS,EACTC,YAAY,kBAEd,SAACP,EAAD,CAAQI,KAAK,SAAb,sBAGL,ECND,EARe,SAAC,GAAmB,IAAjBI,EAAgB,EAAhBA,UAChB,OAAO,mDAA2BA,IACnC,E,iBCqED,EAjEe,WAAO,IAAD,EAEXC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAER,GAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAO1B,EAAP,KAAc2B,EAAd,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KAEMT,EAAS,UAAGI,EAAaM,IAAI,oBAApB,QAAoC,GA4CnD,OA/BAC,EAAAA,EAAAA,YAAU,WACR,GAAkB,KAAdX,EAAJ,CAKA,IAAMY,EAAa,IAAIC,gBAoBvB,OA1Bc,oCAwBdC,CAAWd,GAEJ,WACLY,EAAWG,OACZ,CAxBA,CAJa,wCAQd,WAA0Bf,GAA1B,8EACES,GAAY,GADd,kBAG8BR,EAAce,WAAW,CACjDJ,WAAAA,EACAZ,UAAAA,IALN,OAGUiB,EAHV,OAOIV,EAASU,EAAYC,SAPzB,gDASIX,EAAS,IACTY,QAAQC,IAAI,cAAZ,MAVJ,yBAYIX,GAAY,GAZhB,4EARc,wBAEZF,EAAS,GA2BZ,GAAE,CAACP,EAAWC,KAGb,iCACE,SAAC,EAAD,CAAWR,aA5CW,SAAA4B,GACxBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACbC,EAAQF,EAAKG,SAASV,WAAWS,MAEvCpB,EAA0B,KAAVoB,EAAe,CAAEzB,UAAWyB,GAAU,CAAC,GACvDlB,EAAS,IAETgB,EAAKI,OACN,IAqCInB,IAAY,SAACoB,EAAA,EAAD,IACK,IAAjBhD,EAAMiD,QAA8B,KAAd7B,IAAqBQ,IAC1C,SAAC,EAAD,CAAQR,UAAWA,IAEH,IAAjBpB,EAAMiD,SAAgB,SAACC,EAAA,EAAD,CAAYlD,MAAOA,MAG/C,C","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","components/NoFilm/NoFilm.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n  a {\n    text-decoration: none;\n    color: #333;\n    font-size: 16px;\n    font-weight: bold;\n    transition: color 0.2s ease-in-out;\n\n    &:hover {\n      color: #4CAF50;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List, Item } from './MovieList.styled';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {films.map(element => {\n        return (\n          <Item key={element.id}>\n            <Link to={`/movies/${element.id}`} state={{ from: location }}>\n              {element.title}\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const FormSearch = styled.form`\n  display: flex;\n  gap: 3px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Button = styled.button`\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { FormSearch, Input, Button } from './SearchBox.styled';\n\nconst SearchBox = ({ onSubmitForm }) => {\n  return (\n    <FormSearch onSubmit={onSubmitForm}>\n      <Input\n        name=\"searchFilm\"\n        type=\"text\"\n        autoComplete=\"on\"\n        autoFocus\n        placeholder=\"Search films\"\n      />\n      <Button type=\"submit\">Search</Button>\n    </FormSearch>\n  );\n};\nSearchBox.propTypes = {\n  onSubmitForm: PropTypes.func,\n};\n\nexport default SearchBox;\n","import PropTypes from 'prop-types';\n\nconst NoFilm = ({ nameFilms }) => {\n  return <p>No find film with name {nameFilms}</p>;\n};\n\nNoFilm.propTypes = {\n  nameFilms: PropTypes.string.isRequired,\n};\n\nexport default NoFilm;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useContextFetchFilm } from 'components/ContextFetchFilm/ContextFetchFilm';\nimport SearchBox from 'components/SearchBox';\nimport NoFilm from 'components/NoFilm';\nimport MoviesList from 'components/MoviesList';\nimport Loader from 'components/Loader';\n\nconst Movies = () => {\n  // * Беру контекст для роботи із APIзапросами\n  const { apiThemoviedb } = useContextFetchFilm();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [films, setFilms] = useState([]);\n  const [showLoad, setShowLoad] = useState(false);\n\n  const nameFilms = searchParams.get('nameFilms') ?? '';\n\n  const handlerSubmitForm = event => {\n    event.preventDefault();\n    const form = event.target;\n    const value = form.elements.searchFilm.value;\n\n    setSearchParams(value !== '' ? { nameFilms: value } : {});\n    setFilms([]);\n\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (nameFilms === '') {\n      setFilms([]);\n      return;\n    }\n\n    const controller = new AbortController();\n\n    async function fetchFilms(nameFilms) {\n      setShowLoad(true);\n      try {\n        const searchFilms = await apiThemoviedb.searchFilm({\n          controller,\n          nameFilms,\n        });\n        setFilms(searchFilms.results);\n      } catch (Error) {\n        setFilms([]);\n        console.log('Error fetch', Error);\n      } finally {\n        setShowLoad(false);\n      }\n    }\n\n    fetchFilms(nameFilms);\n\n    return () => {\n      controller.abort();\n    };\n  }, [nameFilms, apiThemoviedb]);\n\n  return (\n    <>\n      <SearchBox onSubmitForm={handlerSubmitForm} />\n\n      {showLoad && <Loader />}\n      {films.length === 0 && nameFilms !== '' && !showLoad && (\n        <NoFilm nameFilms={nameFilms} />\n      )}\n      {films.length !== 0 && <MoviesList films={films} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","Item","films","location","useLocation","map","element","to","id","state","from","title","FormSearch","Input","Button","onSubmitForm","onSubmit","name","type","autoComplete","autoFocus","placeholder","nameFilms","apiThemoviedb","useContextFetchFilm","useSearchParams","searchParams","setSearchParams","useState","setFilms","showLoad","setShowLoad","get","useEffect","controller","AbortController","fetchFilms","abort","searchFilm","searchFilms","results","console","log","event","preventDefault","form","target","value","elements","reset","Loader","length","MoviesList"],"sourceRoot":""}