{"version":3,"file":"static/js/283.8f10dbf5.chunk.js","mappings":"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","sources":["components/ReviewsList/ReviewsList.js","components/Reviews/Reviews.js","servises/fetchFilms.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(element => {\n        return (\n          <li>\n            <h4>Author: {element.name}</h4>\n            <p>{element.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ReviewsList;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n// import { useContextFetchFilm } from 'components/ContextFetchFilm/ContextFetchFilm';\nimport Loader from 'components/Loader';\nimport ReviewsList from 'components/ReviewsList';\nimport ApiThemoviedb from '../../servises/fetchFilms'\n\nconst apiThemoviedb = new ApiThemoviedb();\n\nconst Reviews = () => {\n  // * Беру контекст для роботи із APIзапросами\n  // const { apiThemoviedb } = useContextFetchFilm();\n  const [showLoad, setShowLoad] = useState(false);\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    function normalizeReviews(information) {\n      const result = information.map(element => {\n        return {\n          name: element.author_details.username,\n          content: element.content,\n        };\n      });\n\n      return result;\n    }\n\n    async function fetchInformation() {\n      setShowLoad(true);\n      try {\n        const information = await apiThemoviedb.fetchReviewsFromFilm(\n          movieId,\n          controller\n        );\n\n        setReviews(normalizeReviews(information.results));\n      } catch {\n        setReviews([]);\n        console.log('Error fetch');\n      } finally {\n        setShowLoad(false);\n      }\n    }\n\n    fetchInformation();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {showLoad && <Loader />}\n      {!showLoad && reviews.length === 0 && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n      {!showLoad && reviews.length > 0 && <ReviewsList reviews={reviews} />}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nexport default class ApiThemoviedb {\n  #KEY = '79054ab6d7c73d62d26a93a0f299cea4';\n  #URL = 'https://api.themoviedb.org/3/';\n\n  constructor() {\n    this.API = axios.create({\n      baseURL: this.#URL,\n      header: {},\n      params: {\n        api_key: this.#KEY,\n      },\n    });\n\n    this.configImages = null;\n    this.listGenge = null;\n  }\n\n  // * OK\n  async searchFilm({ nameFilms, controller, page = 1 } = {}) {\n    const result = await this.API.get(`search/movie`, {\n      params: {\n        signal: controller.signal,\n        query: nameFilms,\n        page,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchTrending({ controller, page = 1, time_window = 'day' } = {}) {\n    const result = await this.API.get(`/trending/movie/${time_window}`, {\n      params: {\n        signal: controller.signal,\n        page,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchFullInformationFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n\n    return result?.data;\n  }\n\n  // * OK\n  async fetchCreditsFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}/credits`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n    return result?.data;\n  }\n\n  // * OK\n  async fetchReviewsFromFilm(movie_id, controller) {\n    const result = await this.API.get(`/movie/${movie_id}/reviews`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n    return result?.data;\n  }\n\n  async getUrlImage(size) {\n    // ! Документація саме так радить знаходити урл до зображенння\n    // Тому не підставляю просто рядок\n\n    const configurationImages = await this.getConfigurationImages();\n\n    return `${configurationImages.base_url}${size}`;\n\n    // console.log(configurationImages.poster_sizes);\n    // return `${configurationImages.base_url}${configurationImages.poster_sizes[0]}${path}`;\n    // return `${configurationImages.base_url}original${path}`;\n  }\n\n  // * Work from configuration Images\n  async getConfigurationImages() {\n    if (this.configImages) return this.configImages;\n\n    this.configImages = await this.fetchConfiguration();\n\n    return this.configImages;\n  }\n\n  async fetchConfiguration() {\n    const result = await this.API.get('/configuration');\n    return result?.data?.images;\n  }\n\n  getGendeText(genres) {\n    const gendeText = genres.reduce((gendeText, element) => {\n      return (gendeText += (gendeText === '' ? '' : ', ') + element.name);\n    }, '');\n\n    return gendeText;\n  }\n}\n"],"names":["_ref","reviews","_jsx","children","map","element","_jsxs","name","content","apiThemoviedb","ApiThemoviedb","_useState","useState","_useState2","_slicedToArray","showLoad","setShowLoad","movieId","useParams","_useState3","_useState4","setReviews","useEffect","controller","AbortController","normalizeReviews","information","author_details","username","_fetchInformation","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchReviewsFromFilm","sent","results","t0","console","log","finish","stop","apply","arguments","fetchInformation","abort","_Fragment","Loader","length","ReviewsList","_KEY","_classPrivateFieldLooseKey","_URL","_classCallCheck","Object","defineProperty","writable","value","this","API","axios","baseURL","_classPrivateFieldLooseBase","header","params","api_key","configImages","listGenge","_createClass","key","_searchFilm","nameFilms","_ref$page","page","result","_args","undefined","get","signal","query","abrupt","data","_fetchTrending","_callee2","_ref2","_ref2$page","_ref2$time_window","time_window","_args2","_context2","concat","_fetchFullInformationFromFilm","_callee3","movie_id","_context3","_x","_x2","_fetchCreditsFromFilm","_callee4","_context4","_x3","_x4","_fetchReviewsFromFilm","_callee5","_context5","_x5","_x6","_getUrlImage","_callee6","size","configurationImages","_context6","getConfigurationImages","base_url","_x7","_getConfigurationImages","_callee7","_context7","fetchConfiguration","_fetchConfiguration","_callee8","_result$data","_context8","images","genres","reduce","gendeText"],"sourceRoot":""}